{"version":3,"sources":["gop.jpg","gop-logo-1.jpg","Container.tsx","Vote.tsx","Winner.tsx","Simulator.tsx","Logo.tsx","Logos.tsx","Calculator.tsx","App.tsx","Menu.tsx","Content.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","ContainerBackground","Vote","React","forwardRef","voteRef","label","percent","progressRef","useRef","animationRef","useEffect","current","seek","useUpdateProgress","progressBarRef","gsap","to","duration","backgroundColor","paused","useProgressAnimation","className","ref","style","width","background","Winner","useState","isWinnerVisible","setIsWinnerVisible","widthHeight","setWidthHeight","evtListener","window","innerWidth","innerHeight","addEventListener","removeEventListener","showWinnerTimeoutId","setTimeout","clearTimeout","winnerClasses","classNames","height","src","logoSrc","alt","resultsEmulation","useSimulator","invitationRef","graphRef","gopVoteRef","annoncementRef","onShowWinner","length","daysLeft","setDaysLeft","isRunning","setIsRunning","run","useCallback","pause","changeTimeoutId","dL","currentResults","useDaysCounter","runDaysCounter","pauseDaysCounter","timeline","opacity","scale","transformOrigin","onComplete","set","display","ease","from","delay","resume","winnerTimeoutId","startSimulator","Simulator","announcementRef","showWinner","setShowWinner","onClick","Logo","description","displayItem","titleText","Logos","logoOneSrc","Calculator","investment","setInvestment","multiplier","setMultiplier","burnPercent","isNaN","gopRecieved","gopBurned","ethRecieved","showData","value","onChange","e","valueAsNumber","Number","undefined","checkAndSetInvestment","target","checkAndSetMultiplier","toFixed","Pages","Container","children","backgroundClass","containerBackgroundClasses","PRIMARY","SECONDARY","TERTIARY","MenuItem","href","text","page","active","menuItemClasses","preventDefault","onItemClick","Menu","activePage","title","CALCULATOR","SIMULATOR","LOGOS","Content","App","pageElement","setPage","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"+EAAAA,EAAOC,QAAU,IAA0B,iC,mBCA3CD,EAAOC,QAAU,IAA0B,wC,iQCI/BC,E,0ECqDGC,EArBFC,IAAMC,YAAsC,WAAqBC,GAAa,IAA/BC,EAA8B,EAA9BA,MAAOC,EAAuB,EAAvBA,QACzDC,EAAcC,iBAAuB,MAI3C,OAdsB,SAACF,EAAiBG,GACxCC,qBAAU,WACDD,EAAaE,SAGlBF,EAAaE,QAAQC,KAAKN,KAC3B,CAACA,EAASG,IAMbI,CAAkBP,EA9BO,SAACQ,GAC1B,IAAML,EAAeD,mBAcrB,OAZAE,qBAAU,WACDI,EAAeH,UAAaF,EAAaE,UAI9CF,EAAaE,QAAUI,IAAKC,GAAGF,EAAeH,QAAS,CACnDM,SAAU,IACVC,gBAAiB,QACjBC,QAAQ,OAEb,CAACL,EAAgBL,IAEbA,EAccW,CAAqBb,IAItC,yBAAKc,UAAU,eAAeC,IAAKlB,GAC/B,yBAAKiB,UAAU,QACX,2BAAOA,UAAU,cAAchB,EAA/B,KAAwCC,EAAxC,MACA,yBAAKe,UAAU,gBACX,yBACIC,IAAKf,EACLc,UAAU,yBACVE,MAAO,CAAEC,MAAM,GAAD,OAAiB,IAAZlB,EAAgB,EAAIA,EAAzB,KAAqCmB,WAAY,e,wDCKxEC,EAhDU,WAAO,IAAD,EACmBC,oBAAS,GAD5B,mBACpBC,EADoB,KACHC,EADG,OAEWF,qBAFX,mBAEpBG,EAFoB,KAEPC,EAFO,KA6B3B,GAzBArB,qBAAU,WACN,IAAMsB,EAAc,WAChBD,EAAe,CAACE,OAAOC,WAAYD,OAAOE,eAK9C,OAHAF,OAAOG,iBAAiB,SAAUJ,GAClCA,IAEO,WACHC,OAAOI,oBAAoB,SAAUL,MAE1C,CAACD,IAEJrB,qBAAU,WACN,IAAIkB,EAAJ,CAGA,IAAMU,EAAsBC,YAAW,WACnCV,GAAmB,KACpB,KAEH,OAAO,WACHW,aAAaF,OAElB,CAACV,EAAiBC,KAEhBC,EACD,OAAO,KAGX,IAAMW,EAAgBC,IAAW,SAAU,CACvC,kBAAmBd,IAGvB,OACI,oCACI,kBAAC,IAAD,CAAUJ,MAAOM,EAAY,GAAIa,OAAQb,EAAY,KACrD,yBAAKT,UAAWoB,GACZ,uBAAGpB,UAAU,wBAAb,wBACA,yBAAKA,UAAU,gBAAgBuB,IAAKC,IAASC,IAAI,iCCzC3DC,EAAmB,CACrB,CAAC,EAAG,EAAG,GACP,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,GACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,GAAI,GAAI,IACT,CAAC,EAAG,EAAG,IACP,CAAC,EAAG,EAAG,MAkCLC,EAAe,SACjBC,EACAC,EACAC,EACAC,EACAC,GAEA,IAAM5C,EAAeD,mBADpB,EArCkB,WAAO,IAAD,EACOmB,mBAASoB,EAAiBO,OAAS,GAD1C,mBAClBC,EADkB,KACRC,EADQ,OAES7B,oBAAS,GAFlB,mBAElB8B,EAFkB,KAEPC,EAFO,KAInBC,EAAMC,uBAAY,kBAAMF,GAAa,KAAO,CAACA,IAC7CG,EAAQD,uBAAY,kBAAMF,GAAa,KAAQ,CAACA,IAkBtD,OAhBAhD,qBAAU,WACN,GAAK+C,GAA0B,IAAbF,EAAlB,CAIA,IAAMO,EAAkBvB,YAAW,WAC/BiB,GAAY,SAACO,GAAD,OAAQA,EAAK,OAC1B,KAEH,OAAO,WACHvB,aAAasB,OAElB,CAACP,EAAUC,EAAaC,IAIpB,CACHO,eAHmBjB,EAAiBA,EAAiBO,OAASC,EAAW,GAIzEA,WACAI,MACAE,SAa+EI,GAA3ED,EAHP,EAGOA,eAAgBT,EAHvB,EAGuBA,SAAeW,EAHtC,EAGiCP,IAA4BQ,EAH7D,EAGsDN,MA0FvD,OAxFAnD,qBAAU,WAEDuC,EAActC,SACduC,EAASvC,SACTyC,EAAezC,SACfwC,EAAWxC,UACVF,EAAaE,UAKnBF,EAAaE,QAAUI,IAClBqD,WACApD,GAAGiC,EAActC,QAAS,CACvBM,SAAU,GACVoD,QAAS,EACTC,MAAO,IACPC,gBAAiB,SACjBC,WAAY,WACRzD,IAAK0D,IAAIxB,EAActC,QAAS,CAAE+D,QAAS,UAE/CC,KAAM,KAETC,KAAK1B,EAASvC,QAAS,CACpBkE,MAAO,GACP5D,SAAU,GACVoD,QAAS,EACTC,MAAO,IACPC,gBAAiB,SACjBG,QAAS,OACTF,WAAY,WACN/D,EAAaE,SAAWF,EAAaE,QAAQkD,QAC/CtB,YAAW,kBAAM2B,MAAkB,QAG1CU,KAAKxB,EAAezC,QAAS,CAC1B+D,QAAS,OACTL,QAAS,EACTC,MAAO,IACPC,gBAAiB,SACjBtD,SAAU,KAEbD,GAAGoC,EAAezC,QAAS,CACxBkE,MAAO,EACPR,QAAS,EACTK,QAAS,OACTJ,MAAO,IACPC,gBAAiB,SACjBtD,SAAU,KAEb2D,KAAKzB,EAAWxC,QAAS,CACtB0D,QAAS,EACTpD,SAAU,GACVqD,MAAO,IACPC,gBAAiB,SACjBG,QAAS,OACTC,KAAM,YACNH,WAAY,WACN/D,EAAaE,SAAWF,EAAaE,QAAQkD,QAC/CtB,YAAW,kBAAM2B,MAAkB,QAG1CL,WACN,CAACZ,EAAeC,EAAUC,EAAYC,EAAgB3C,EAAcyD,IAEvExD,qBAAU,WACW,KAAb6C,GAAoB9C,EAAaE,UAGrCwD,IACA1D,EAAaE,QAAQmE,YACtB,CAACvB,EAAU9C,EAAc0D,IAE5BzD,qBAAU,WACN,GAAiB,IAAb6C,EAAJ,CAIA,IAAMwB,EAAkBxC,YAAW,WAC/Bc,MACD,KACH,OAAO,WACHb,aAAauC,OAElB,CAACxB,EAAUF,IAIP,CAAE2B,eAFcpB,uBAAY,mBAAQnD,EAAaE,SAAWF,EAAaE,QAAQmE,WAAU,CAACrE,IAE1EuD,iBAAgBT,aAqD9B0B,EAlDa,WACxB,IAAMhC,EAAgBzC,iBAAuB,MACvC0C,EAAW1C,iBAAuB,MAClC2C,EAAa3C,iBAAuB,MACpC0E,EAAkB1E,iBAAuB,MAJjB,EAMMmB,oBAAS,GANf,mBAMvBwD,EANuB,KAMXC,EANW,KAOxB/B,EAAeO,uBAAY,kBAAMwB,GAAc,KAAO,CAACA,IAP/B,EASuBpC,EACjDC,EACAC,EACAC,EACA+B,EACA7B,GALI2B,EATsB,EAStBA,eAAgBhB,EATM,EASNA,eAAgBT,EATV,EASUA,SAQxC,OACI,oCACI,yBAAKlC,UAAU,qBACX,yBAAKA,UAAU,uBAAuBC,IAAK2B,GACvC,uBAAG5B,UAAU,8BAAb,+DAGA,4BAAQA,UAAU,+BAA+BgE,QAASL,GAA1D,6BAKJ,yBAAK3D,UAAU,kBAAkBC,IAAK4B,GAClC,wBAAI7B,UAAU,0BAAd,mCAAwEkC,EAAxE,KAEA,kBAAC,EAAD,CAAMlD,MAAM,eAAeC,QAAS0D,EAAe,KACnD,kBAAC,EAAD,CAAM3D,MAAM,YAAYC,QAAS0D,EAAe,KAChD,kBAAC,EAAD,CAAM3D,MAAM,4BAA4BC,QAAS0D,EAAe,GAAI1C,IAAK6B,KAG7E,yBAAK9B,UAAU,0BAA0BC,IAAK4D,GAC1C,wBAAI7D,UAAU,kCAAd,iBACA,uBAAGA,UAAU,iCAAb,4DAMP8D,GAAc,kBAAC,EAAD,QCpNZG,G,MAnBmB,SAAC,GAA0B,IAAxB1C,EAAuB,EAAvBA,IAAK2C,EAAkB,EAAlBA,YAChCC,EAAgB5C,EAClB,yBAAKA,IAAKA,EAAKvB,UAAU,YAAYyB,IAAI,SAEzC,uBAAGzB,UAAU,cAAb,cAGEoE,EAAYF,GAAe,YAEjC,OACI,yBAAKlE,UAAU,gBACX,yBAAKA,UAAU,QACX,wBAAIA,UAAU,eAAeoE,GAC7B,yBAAKpE,UAAU,cAAcmE,O,gBCR9BE,EATS,WACpB,OACI,yBAAKrE,UAAU,SACX,kBAAC,EAAD,CAAMuB,IAAK+C,IAAYJ,YAAY,4BACnC,kBAAC,EAAD,QCoEGK,G,MAxEc,WAAO,IAAD,EACKjE,qBADL,mBACxBkE,EADwB,KACZC,EADY,OAEKnE,qBAFL,mBAExBoE,EAFwB,KAEZC,EAFY,KAc3BC,EAAgBF,IAAeG,MAAMH,IAAeA,GAAc,EAAI,GAAKA,EAAa,GAC5FE,EAAcA,EAAc,EAAI,EAAIA,EAAc,GAAK,GAAKA,EAE5D,IAAME,EAAgBN,IAAeK,MAAML,IAAeA,EAAa,EAAiB,KAAbA,EAAqB,EAC1FO,EAAaH,EAAc,IAAOE,EAClCE,EACAR,IAAeK,MAAML,IAAeA,EAAa,GAAOE,IAAeG,MAAMH,IAAeA,EAAa,EACpGF,EAAaE,GAAc,IAAME,GAAgB,IAClD,EAEJK,IACAT,IAAeK,MAAML,IAAeA,EAAa,KAAOE,IAAeG,MAAMH,IAAeA,EAAa,EAE/G,OACI,yBAAK1E,UAAU,cACX,uBAAGA,UAAU,wBAAb,mFAIA,yBAAKA,UAAU,6BACX,yBAAKA,UAAU,6CACX,2BAAOA,UAAU,qBAAjB,qBACA,2BAAOkF,MAAOV,EAAYW,SAAU,SAACC,GAAD,OAhCtB,SAACF,GAC3B,IAAMG,EAAgBC,OAAOJ,GAC7BT,EAAeI,MAAMQ,QAAiCE,EAAhBF,GA8BiBG,CAAsBJ,EAAEK,OAAOP,WAG9E,yBAAKlF,UAAU,6CACX,2BAAOA,UAAU,qBAAjB,cACA,2BAAOkF,MAAOR,EAAYS,SAAU,SAACC,GAAD,OAhCtB,SAACF,GAC3B,IAAMG,EAAgBC,OAAOJ,GAC7BP,EAAeE,MAAMQ,QAAiCE,EAAhBF,GA8BiBK,CAAsBN,EAAEK,OAAOP,YAIjFD,GACG,yBAAKjF,UAAU,oBACX,yBAAKA,UAAU,qBACX,2BAAOA,UAAU,qBAAjB,iBACA,uBAAGA,UAAU,sBAAsB8E,EAAYa,QAAQ,KAG3D,yBAAK3F,UAAU,qBACX,2BAAOA,UAAU,qBAAjB,UACA,uBAAGA,UAAU,sBAAsB4E,EAAYe,QAAQ,KAG3D,yBAAK3F,UAAU,qBACX,2BAAOA,UAAU,qBAAjB,uBACA,uBAAGA,UAAU,sBAAsB+E,EAAUY,QAAQ,GAArD,UAGJ,yBAAK3F,UAAU,qBACX,2BAAOA,UAAU,qBAAjB,wBACA,uBAAGA,UAAU,sBAAsBgF,EAAYW,QAAQ,S,gBNhEnEhH,O,qBAAAA,I,yBAAAA,I,wBAAAA,M,KAUZ,IOJYiH,EPmBGC,EAf6B,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,SAAUC,EAAsB,EAAtBA,gBAC/CC,EAA6B3E,IAAW,wBAAyB,CACnE,iCAAkC0E,IAAoBpH,EAAoBsH,QAC1E,mCAAoCF,IAAoBpH,EAAoBuH,UAC5E,kCAAmCH,IAAoBpH,EAAoBwH,WAG/E,OACI,yBAAKnG,UAAU,aACX,yBAAKA,UAAWgG,IACfF,IQVPM,G,MAAoC,SAAC,GAA4C,IAA1CC,EAAyC,EAAzCA,KAAMC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,OAAQrB,EAAe,EAAfA,SAM7DsB,EAAkBpF,IAAW,aAAc,CAC7C,qBAAsBmF,IAG1B,OACI,uBAAGH,KAAMA,EAAMrG,UAAWyG,EAAiBzC,QAAS,SAACoB,GAAD,OAVpC,SAACA,EAAoDmB,GACrEnB,EAAEsB,iBACFvB,EAASoB,GAQkDI,CAAYvB,EAAGmB,KACrED,KAkDEM,EAxCmB,SAAC,GAA8B,IAA5BC,EAA2B,EAA3BA,WAAY1B,EAAe,EAAfA,SAC7C,OACI,yBAAKnF,UAAU,gBACX,yBAAKA,UAAU,eACX,yBACIA,UAAU,mBACVuB,IAAKC,IACLsF,MAAM,4BACNrF,IAAI,8BAER,wBAAIzB,UAAU,sBAAd,8BAGJ,yBAAKA,UAAU,QACX,kBAAC,EAAD,CACIsG,KAAK,aACLD,KAAK,cACLG,OAAQK,IAAejB,EAAMmB,WAC7BR,KAAMX,EAAMmB,WACZ5B,SAAUA,IAEd,kBAAC,EAAD,CACImB,KAAK,YACLD,KAAK,aACLG,OAAQK,IAAejB,EAAMoB,UAC7BT,KAAMX,EAAMoB,UACZ7B,SAAUA,IAEd,kBAAC,EAAD,CACImB,KAAK,QACLD,KAAK,SACLG,OAAQK,IAAejB,EAAMqB,MAC7BV,KAAMX,EAAMqB,MACZ9B,SAAUA,OC9Df+B,G,MAJW,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACzB,OAAO,yBAAK9F,UAAU,WAAW8F,M,SFMzBF,O,yBAAAA,I,iBAAAA,I,4BAAAA,M,KAoCGuB,MA9Bf,WAAgB,IAGRC,EACArB,EAJO,EACazF,mBAAgBsF,EAAMmB,YADnC,mBACJR,EADI,KACEc,EADF,KAMX,OAAQd,GACJ,KAAKX,EAAMoB,UACPI,EAAc,kBAAC,EAAD,MACdrB,EAAkBpH,EAAoBsH,QACtC,MAEJ,KAAKL,EAAMqB,MACPG,EAAc,kBAAC,EAAD,MACdrB,EAAkBpH,EAAoBuH,UACtC,MAEJ,QACIkB,EAAc,kBAAC,EAAD,MACdrB,EAAkBpH,EAAoBwH,SAG9C,OACI,kBAAC,EAAD,CAAWJ,gBAAiBA,GACxB,kBAAC,EAAD,CAAMZ,SAAUkC,EAASR,WAAYN,IACrC,kBAAC,EAAD,KAAUa,KG7BFE,QACW,cAA7B1G,OAAO2G,SAASC,UAEe,UAA7B5G,OAAO2G,SAASC,UAEhB5G,OAAO2G,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDiIpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4b9ead48.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/gop.f0241d4d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/gop-logo-1.ee7ecd56.jpg\";","import React from 'react';\nimport './Container.css';\nimport classNames from 'classnames';\n\nexport enum ContainerBackground {\n    PRIMARY,\n    SECONDARY,\n    TERTIARY,\n}\n\nexport interface ContainerProps {\n    backgroundClass: ContainerBackground;\n}\n\nconst Container: React.FC<ContainerProps> = ({ children, backgroundClass }) => {\n    const containerBackgroundClasses = classNames('container__background', {\n        'container__background--primary': backgroundClass === ContainerBackground.PRIMARY,\n        'container__background--secondary': backgroundClass === ContainerBackground.SECONDARY,\n        'container__background--tertiary': backgroundClass === ContainerBackground.TERTIARY,\n    });\n\n    return (\n        <div className='container'>\n            <div className={containerBackgroundClasses} />\n            {children}\n        </div>\n    );\n};\n\nexport default Container;\n","import React, { useEffect, useRef } from 'react';\nimport './Vote.css';\nimport gsap from 'gsap';\n\nexport interface VoteProps {\n    label: string;\n    percent: number;\n}\n\nconst useProgressAnimation = (progressBarRef: React.RefObject<HTMLDivElement>) => {\n    const animationRef = useRef<gsap.core.Tween>();\n\n    useEffect(() => {\n        if (!progressBarRef.current || !!animationRef.current) {\n            return;\n        }\n\n        animationRef.current = gsap.to(progressBarRef.current, {\n            duration: 100,\n            backgroundColor: 'green',\n            paused: true,\n        });\n    }, [progressBarRef, animationRef]);\n\n    return animationRef;\n};\n\nconst useUpdateProgress = (percent: number, animationRef: React.MutableRefObject<gsap.core.Tween | undefined>) => {\n    useEffect(() => {\n        if (!animationRef.current) {\n            return;\n        }\n        animationRef.current.seek(percent);\n    }, [percent, animationRef]);\n};\n\nconst Vote = React.forwardRef<HTMLDivElement, VoteProps>(({ label, percent }, voteRef) => {\n    const progressRef = useRef<HTMLDivElement>(null);\n    const animationRef = useProgressAnimation(progressRef);\n    useUpdateProgress(percent, animationRef);\n\n    return (\n        <div className='vote-wrapper' ref={voteRef}>\n            <div className='vote'>\n                <label className='vote-label'>{label} ({percent}%)</label>\n                <div className='vote-percent'>\n                    <div\n                        ref={progressRef}\n                        className='vote-percent__progress'\n                        style={{ width: `${percent === 0 ? 1 : percent}%`, background: 'red' }}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n});\n\nexport default Vote;\n","import React, { useEffect, useState } from 'react';\nimport Confetti from 'react-confetti';\nimport logoSrc from './gop.jpg';\nimport './Winner.css';\nimport classNames from 'classnames';\n\nconst Winner: React.FC = () => {\n    const [isWinnerVisible, setIsWinnerVisible] = useState(false);\n    const [widthHeight, setWidthHeight] = useState<number[]>();\n\n    useEffect(() => {\n        const evtListener = () => {\n            setWidthHeight([window.innerWidth, window.innerHeight]);\n        };\n        window.addEventListener('resize', evtListener);\n        evtListener();\n\n        return () => {\n            window.removeEventListener('resize', evtListener);\n        };\n    }, [setWidthHeight]);\n\n    useEffect(() => {\n        if (isWinnerVisible) {\n            return;\n        }\n        const showWinnerTimeoutId = setTimeout(() => {\n            setIsWinnerVisible(true);\n        }, 500);\n\n        return () => {\n            clearTimeout(showWinnerTimeoutId);\n        };\n    }, [isWinnerVisible, setIsWinnerVisible]);\n\n    if (!widthHeight) {\n        return null;\n    }\n\n    const winnerClasses = classNames('winner', {\n        'winner--visible': isWinnerVisible,\n    });\n\n    return (\n        <>\n            <Confetti width={widthHeight[0]} height={widthHeight[1]} />\n            <div className={winnerClasses}>\n                <p className='winner__announcement'>And the winner is...</p>\n                <img className='winner__image' src={logoSrc} alt='$GoP - Game of Presidents' />\n            </div>\n        </>\n    );\n};\n\nexport default Winner;\n","import React, { useCallback, useEffect, useState, useRef } from 'react';\nimport './Simulator.css';\nimport Vote from './Vote';\nimport gsap from 'gsap';\nimport './Winner';\nimport Winner from './Winner';\n\nconst resultsEmulation = [\n    [0, 0, 0],\n    [58, 42, 0],\n    [53, 47, 0],\n    [55, 45, 0],\n    [53, 47, 0],\n    [50, 50, 0],\n    [49, 51, 0],\n    [46, 54, 0],\n    [47, 53, 0],\n    [49, 51, 0],\n    [51, 49, 0],\n    [55, 45, 0],\n    [61, 39, 0],\n    [63, 37, 0],\n    [67, 33, 0],\n    [72, 28, 0],\n    [69, 31, 0],\n    [67, 33, 0],\n    [65, 35, 0],\n    [64, 36, 0],\n    [62, 38, 0],\n    [59, 41, 0],\n    [56, 44, 0],\n    [55, 45, 0],\n    [57, 43, 0],\n    [52, 48, 0],\n    [49, 51, 0],\n    [48, 52, 0],\n    [51, 49, 0],\n    [55, 45, 0],\n    [53, 47, 0],\n    [52, 48, 0],\n    [49, 51, 0],\n    [48, 52, 0],\n    [53, 47, 0],\n    [55, 45, 0],\n    [52, 48, 0],\n    [51, 47, 2],\n    [49, 45, 6],\n    [46, 42, 12],\n    [44, 40, 16],\n    [42, 38, 20],\n    [40, 36, 24],\n    [36, 33, 31],\n    [32, 30, 38],\n    [28, 26, 46],\n    [23, 22, 55],\n    [17, 17, 66],\n    [11, 12, 77],\n    [6, 6, 88],\n    [0, 0, 100],\n];\n\nconst useDaysCounter = () => {\n    const [daysLeft, setDaysLeft] = useState(resultsEmulation.length - 1);\n    const [isRunning, setIsRunning] = useState(false);\n\n    const run = useCallback(() => setIsRunning(true), [setIsRunning]);\n    const pause = useCallback(() => setIsRunning(false), [setIsRunning]);\n\n    useEffect(() => {\n        if (!isRunning || daysLeft === 0) {\n            return;\n        }\n\n        const changeTimeoutId = setTimeout(() => {\n            setDaysLeft((dL) => dL - 1);\n        }, 100);\n\n        return () => {\n            clearTimeout(changeTimeoutId);\n        };\n    }, [daysLeft, setDaysLeft, isRunning]);\n\n    const currentResults = resultsEmulation[resultsEmulation.length - daysLeft - 1];\n\n    return {\n        currentResults,\n        daysLeft,\n        run,\n        pause,\n    };\n};\n\nconst useSimulator = (\n    invitationRef: React.RefObject<HTMLDivElement>,\n    graphRef: React.RefObject<HTMLDivElement>,\n    gopVoteRef: React.RefObject<HTMLDivElement>,\n    annoncementRef: React.RefObject<HTMLDivElement>,\n    onShowWinner: () => void\n) => {\n    const animationRef = useRef<gsap.core.Timeline>();\n\n    const { currentResults, daysLeft, run: runDaysCounter, pause: pauseDaysCounter } = useDaysCounter();\n\n    useEffect(() => {\n        if (\n            !invitationRef.current ||\n            !graphRef.current ||\n            !annoncementRef.current ||\n            !gopVoteRef.current ||\n            !!animationRef.current\n        ) {\n            return;\n        }\n\n        animationRef.current = gsap\n            .timeline()\n            .to(invitationRef.current, {\n                duration: 0.6,\n                opacity: 0,\n                scale: 1.5,\n                transformOrigin: 'center',\n                onComplete: () => {\n                    gsap.set(invitationRef.current, { display: 'none' });\n                },\n                ease: '',\n            })\n            .from(graphRef.current, {\n                delay: 0.3,\n                duration: 0.6,\n                opacity: 0,\n                scale: 1.5,\n                transformOrigin: 'center',\n                display: 'none',\n                onComplete: () => {\n                    !!animationRef.current && animationRef.current.pause();\n                    setTimeout(() => runDaysCounter(), 300);\n                },\n            })\n            .from(annoncementRef.current, {\n                display: 'none',\n                opacity: 0,\n                scale: 1.3,\n                transformOrigin: 'center',\n                duration: 0.6,\n            })\n            .to(annoncementRef.current, {\n                delay: 2,\n                opacity: 0,\n                display: 'none',\n                scale: 1.3,\n                transformOrigin: 'center',\n                duration: 0.6,\n            })\n            .from(gopVoteRef.current, {\n                opacity: 0,\n                duration: 0.6,\n                scale: 1.5,\n                transformOrigin: 'center',\n                display: 'none',\n                ease: 'power4.in',\n                onComplete: () => {\n                    !!animationRef.current && animationRef.current.pause();\n                    setTimeout(() => runDaysCounter(), 300);\n                },\n            })\n            .pause();\n    }, [invitationRef, graphRef, gopVoteRef, annoncementRef, animationRef, runDaysCounter]);\n\n    useEffect(() => {\n        if (daysLeft !== 15 || !animationRef.current) {\n            return;\n        }\n        pauseDaysCounter();\n        animationRef.current.resume();\n    }, [daysLeft, animationRef, pauseDaysCounter]);\n\n    useEffect(() => {\n        if (daysLeft !== 0) {\n            return;\n        }\n\n        const winnerTimeoutId = setTimeout(() => {\n            onShowWinner();\n        }, 300);\n        return () => {\n            clearTimeout(winnerTimeoutId);\n        };\n    }, [daysLeft, onShowWinner]);\n\n    const startSimulator = useCallback(() => !!animationRef.current && animationRef.current.resume(), [animationRef]);\n\n    return { startSimulator, currentResults, daysLeft };\n};\n\nconst Simulator: React.FC = () => {\n    const invitationRef = useRef<HTMLDivElement>(null);\n    const graphRef = useRef<HTMLDivElement>(null);\n    const gopVoteRef = useRef<HTMLDivElement>(null);\n    const announcementRef = useRef<HTMLDivElement>(null);\n\n    const [showWinner, setShowWinner] = useState(false);\n    const onShowWinner = useCallback(() => setShowWinner(true), [setShowWinner]);\n\n    const { startSimulator, currentResults, daysLeft } = useSimulator(\n        invitationRef,\n        graphRef,\n        gopVoteRef,\n        announcementRef,\n        onShowWinner\n    );\n\n    return (\n        <>\n            <div className='simulator-wrapper'>\n                <div className='simulator-invitation' ref={invitationRef}>\n                    <p className='simulator-invitation__text'>\n                        Click and see what happened during this year's elections...\n                    </p>\n                    <button className='simulator-invitation__button' onClick={startSimulator}>\n                        Show votes in time lapse\n                    </button>\n                </div>\n\n                <div className='simulator-graph' ref={graphRef}>\n                    <h2 className='simulator-graph__title'>Live voting results (days left: {daysLeft})</h2>\n\n                    <Vote label='Donald Trump' percent={currentResults[0]} />\n                    <Vote label='Joe Biden' percent={currentResults[1]} />\n                    <Vote label='$GoP - Game of Presidents' percent={currentResults[2]} ref={gopVoteRef} />\n                </div>\n\n                <div className='simulator-new-candidate' ref={announcementRef}>\n                    <h3 className='simulator-new-candidate__title'>Announcement!</h3>\n                    <p className='simulator-new-candidate__text'>\n                        Looks like we have another candidate joining the race!\n                    </p>\n                </div>\n            </div>\n            \n            {showWinner && <Winner />}\n        </>\n    );\n};\n\nexport default Simulator;\n","import React from 'react';\nimport './Logo.css';\n\nexport interface LogoProps {\n    src?: string;\n    description?: string;\n}\n\nconst Logo: React.FC<LogoProps> = ({ src, description }) => {\n    const displayItem = !!src ? (\n        <img src={src} className='logo__img' alt='logo' />\n    ) : (\n        <p className='logo__text'>To be done</p>\n    );\n\n    const titleText = description || 'Some Logo';\n\n    return (\n        <div className='logo-wrapper'>\n            <div className='logo'>\n                <h4 className='logo__title'>{titleText}</h4>\n                <div className='logo__item'>{displayItem}</div>\n            </div>\n        </div>\n    );\n};\n\nexport default Logo;\n","import React from 'react';\nimport Logo from './Logo';\nimport logoOneSrc from './gop-logo-1.jpg';\n\nconst Logos: React.FC = () => {\n    return (\n        <div className=\"logos\">\n            <Logo src={logoOneSrc} description=\"My version of $GoP logo\" />\n            <Logo />\n        </div>\n    );\n};\n\nexport default Logos;\n","import React from 'react';\nimport { useState } from 'react';\nimport './Calculator.css';\n\nconst Calculator: React.FC = () => {\n    const [investment, setInvestment] = useState<number>();\n    const [multiplier, setMultiplier] = useState<number>();\n\n    const checkAndSetInvestment = (value: string) => {\n        const valueAsNumber = Number(value);\n        setInvestment(!isNaN(valueAsNumber) ? valueAsNumber : undefined);\n    };\n\n    const checkAndSetMultiplier = (value: string) => {\n        const valueAsNumber = Number(value);\n        setMultiplier(!isNaN(valueAsNumber) ? valueAsNumber : undefined);\n    };\n\n    let burnPercent = !!multiplier && !isNaN(multiplier) && multiplier >= 1 ? 40 / multiplier : 40;\n    burnPercent = burnPercent < 1 ? 1 : burnPercent > 40 ? 40 : burnPercent;\n\n    const gopRecieved = !!investment && !isNaN(investment) && investment > 0 ? investment * 15000 : 0;\n    const gopBurned = (burnPercent / 100) * gopRecieved;\n    const ethRecieved =\n        !!investment && !isNaN(investment) && investment > 0 && !!multiplier && !isNaN(multiplier) && multiplier > 0\n            ? (investment * multiplier * (100 - burnPercent)) / 100\n            : 0;\n\n    const showData =\n        !!investment && !isNaN(investment) && investment > 0 && !!multiplier && !isNaN(multiplier) && multiplier > 0;\n\n    return (\n        <div className='calculator'>\n            <p className='calculator__reminder'>\n                This is how burn will impact your profits. Just a reminder not to sell too low!\n            </p>\n\n            <div className='calculator__input-wrapper'>\n                <div className='calculator__block calculator__block--half'>\n                    <label className='calculator__label'>Investment in ETH</label>\n                    <input value={investment} onChange={(e) => checkAndSetInvestment(e.target.value)} />\n                </div>\n\n                <div className='calculator__block calculator__block--half'>\n                    <label className='calculator__label'>Multiplier</label>\n                    <input value={multiplier} onChange={(e) => checkAndSetMultiplier(e.target.value)} />\n                </div>\n            </div>\n\n            {showData && (\n                <div className='calculator__data'>\n                    <div className='calculator__block'>\n                        <label className='calculator__label'>$GoP recieved</label>\n                        <p className='calculator__amount'>{gopRecieved.toFixed(2)}</p>\n                    </div>\n\n                    <div className='calculator__block'>\n                        <label className='calculator__label'>Burn %</label>\n                        <p className='calculator__amount'>{burnPercent.toFixed(2)}</p>\n                    </div>\n\n                    <div className='calculator__block'>\n                        <label className='calculator__label'>$GoP burned on sell</label>\n                        <p className='calculator__amount'>{gopBurned.toFixed(2)} $GoP</p>\n                    </div>\n\n                    <div className='calculator__block'>\n                        <label className='calculator__label'>ETH recieved on sell</label>\n                        <p className='calculator__amount'>{ethRecieved.toFixed(2)}</p>\n                    </div>\n                </div>\n            )}\n        </div>\n    );\n};\n\nexport default Calculator;\n","import React, { useState } from 'react';\nimport './App.css';\nimport Simulator from './Simulator';\nimport Logos from './Logos';\nimport Calculator from './Calculator';\nimport Container from './Container';\nimport Menu from './Menu';\nimport Content from './Content';\nimport { ContainerBackground } from './Container';\n\nexport enum Pages {\n    SIMULATOR,\n    LOGOS,\n    CALCULATOR,\n}\n\nfunction App() {\n    const [page, setPage] = useState<Pages>(Pages.CALCULATOR);\n\n    let pageElement: JSX.Element;\n    let backgroundClass: ContainerBackground;\n\n    switch (page) {\n        case Pages.SIMULATOR:\n            pageElement = <Simulator />;\n            backgroundClass = ContainerBackground.PRIMARY;\n            break;\n\n        case Pages.LOGOS:\n            pageElement = <Logos />;\n            backgroundClass = ContainerBackground.SECONDARY;\n            break;\n\n        default:\n            pageElement = <Calculator />;\n            backgroundClass = ContainerBackground.TERTIARY;\n    }\n\n    return (\n        <Container backgroundClass={backgroundClass}>\n            <Menu onChange={setPage} activePage={page} />\n            <Content>{pageElement}</Content>\n        </Container>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport { Pages } from './App';\nimport './Menu.css';\nimport logoSrc from './gop.jpg';\nimport classNames from 'classnames';\n\nexport interface MenuItemProps {\n    href: string;\n    text: string;\n    page: Pages;\n    active: boolean;\n    onChange: (page: Pages) => void;\n}\n\nconst MenuItem: React.FC<MenuItemProps> = ({ href, text, page, active, onChange }) => {\n    const onItemClick = (e: React.MouseEvent<HTMLAnchorElement, MouseEvent>, page: Pages) => {\n        e.preventDefault();\n        onChange(page);\n    };\n\n    const menuItemClasses = classNames('menu__item', {\n        'menu__item--active': active,\n    });\n\n    return (\n        <a href={href} className={menuItemClasses} onClick={(e) => onItemClick(e, page)}>\n            {text}\n        </a>\n    );\n};\n\nexport interface MenuProps {\n    activePage: Pages;\n    onChange: (page: Pages) => void;\n}\n\nconst Menu: React.FC<MenuProps> = ({ activePage, onChange }) => {\n    return (\n        <div className='menu-wrapper'>\n            <div className='header-logo'>\n                <img\n                    className='header-logo__img'\n                    src={logoSrc}\n                    title='$GoP - Game of Presidents'\n                    alt='$GoP - Game of Presidents'\n                />\n                <h1 className='header-logo__title'>$GoP - Game of Presidents</h1>\n            </div>\n\n            <div className='menu'>\n                <MenuItem\n                    text='Calculator'\n                    href='#calculator'\n                    active={activePage === Pages.CALCULATOR}\n                    page={Pages.CALCULATOR}\n                    onChange={onChange}\n                />\n                <MenuItem\n                    text='Simulator'\n                    href='#simulator'\n                    active={activePage === Pages.SIMULATOR}\n                    page={Pages.SIMULATOR}\n                    onChange={onChange}\n                />\n                <MenuItem\n                    text='Logos'\n                    href='#logos'\n                    active={activePage === Pages.LOGOS}\n                    page={Pages.LOGOS}\n                    onChange={onChange}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default Menu;\n","import React from 'react';\nimport './Content.css';\n\nconst Content: React.FC = ({ children }) => {\n    return <div className='content'>{children}</div>;\n};\n\nexport default Content;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}